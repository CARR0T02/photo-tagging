{"version":3,"file":"static/js/87.20ec41af.chunk.js","mappings":"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","sources":["pages/GamePage/GamepageSidebar.jsx","pages/GamePage/GamePageSelect.jsx","Components/SuccessToast.jsx","Components/FailureToast.jsx","pages/GamePage/Notifications.jsx","Components/WinModal.jsx","pages/GamePage/GamePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { storage } from '../../firebase-config';\nimport { Sidebar, Spinner } from 'flowbite-react';\nimport { getDownloadURL, ref } from 'firebase/storage';\n\nexport default function GamepageSidebar({ loading, charactersData }) {\n  const [isSideBarOpen, setIsSideBarOpen] = useState(false);\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    fetchDownloadURLs(charactersData);\n  }, [charactersData]);\n\n  // Maps imageURLs to download URLs for cloud storage.\n  const fetchDownloadURLs = async (characters) => {\n    let newCharArr = [];\n    for (let character of characters) {\n      try {\n        let downloadURL = await getDownloadURL(\n          ref(storage, character.imageURL)\n        );\n        newCharArr.push({ ...character, imageURL: downloadURL });\n      } catch (e) {\n        console.log('Error in fetching download URL:' + e);\n      }\n    }\n    setCharacters(newCharArr);\n  };\n\n  return (\n    <div id='sidebar-container' className='fixed flex h-full'>\n      <Sidebar\n        className={`sidebar\n        ${isSideBarOpen ? '' : 'none'} `}\n      >\n        <h2 className='font-medium text-xl'>To Find:</h2>\n        {loading && <Spinner aria-label='Loading character data' size='xl' />}\n        <Sidebar.Items>\n          <Sidebar.ItemGroup>\n            {!loading &&\n              characters.map((character) => (\n                <Sidebar.Item className='flex' key={character.name}>\n                  {charactersData.length !== characters.length ? (\n                    <Spinner aria-label='Loading character image' size='xl' />\n                  ) : (\n                    <img src={character.imageURL} alt='' />\n                  )}\n                  <span>{character.name}</span>\n                </Sidebar.Item>\n              ))}\n          </Sidebar.ItemGroup>\n        </Sidebar.Items>\n      </Sidebar>\n      <button\n        onClick={(e) => {\n          e.preventDefault();\n          setIsSideBarOpen(!isSideBarOpen);\n        }}\n        className='sticky top-1/2 text-3xl sm:text-5xl text-primary hover:text-orange-500'\n      >\n        {isSideBarOpen ? '<' : '>'}\n      </button>\n    </div>\n  );\n}\n","import '../../styles/GamePageSelect.css';\nimport React from 'react';\n\nexport default function GamePageSelect({\n  characters,\n  handleClick,\n  position,\n  visible,\n}) {\n  const [x, y] = position;\n  if (visible) {\n    return (\n      <div\n        id='select-container'\n        style={{ left: `${x}px`, top: `${y}px` }}\n        className='sm:text-base text-xs'\n      >\n        {characters.map((character) => (\n          <button\n            onClick={() => {\n              handleClick(character.name);\n            }}\n            key={character.name}\n          >\n            {character.name}\n          </button>\n        ))}\n      </div>\n    );\n  } else {\n    return;\n  }\n}\n","import React from 'react';\nimport { Toast } from 'flowbite-react';\n\nexport default function SuccessToast({ message = 'You found one!' }) {\n  return (\n    <Toast className='!bg-green-200'>\n      <div className='text-sm sm:text-base font-normal text-gray-600'>\n        {message}\n      </div>\n      <Toast.Toggle className='!bg-green-200 text-gray-600' />\n    </Toast>\n  );\n}\n","import React from 'react';\nimport { Toast } from 'flowbite-react';\n\nexport default function FailureToast({ message = \"That's incorrect!\" }) {\n  return (\n    <Toast className='!bg-red-200'>\n      <div className='text-sm sm:text-base font-normal text-gray-600'>\n        {message}\n      </div>\n      <Toast.Toggle className='!bg-red-200 text-gray-600' />\n    </Toast>\n  );\n}\n","import '../../styles/Notifications.css';\nimport React, { useEffect, useState } from 'react';\nimport SuccessToast from '../../Components/SuccessToast';\nimport FailureToast from '../../Components/FailureToast';\n\nexport default function Notifications({ toastList, setToastList }) {\n  const [list, setList] = useState(toastList);\n  const autoDeleteInterval = 2000;\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (toastList.length) {\n        deleteToast(1);\n      }\n    }, autoDeleteInterval);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [toastList, list]);\n\n  const deleteToast = (index) => {\n    let newList = toastList.slice(index);\n    setToastList([...newList]);\n  };\n\n  return (\n    <div\n      id='toast-container'\n      className='fixed top-16 right-3 w-40 sm:w-56 grid gap-2'\n    >\n      {toastList.map((toast, i) => {\n        if (toast.isCorrect) {\n          return <SuccessToast message={`You found ${toast.name}`} key={i} />;\n        }\n        return <FailureToast key={i} />;\n      })}\n    </div>\n  );\n}\n","import '../styles/WinModal.css';\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function WinModal({ hasWon }) {\n  useEffect(() => {\n    let s = document.querySelector('#win-modal');\n    if (hasWon) {\n      s.showModal();\n    }\n    return () => {\n      s.close();\n    };\n  }, [hasWon]);\n  return (\n    <dialog\n      id='win-modal'\n      onKeyDown={(e) => {\n        if (e.key === 'Escape') {\n          e.preventDefault();\n        }\n      }}\n      className='rounded-md'\n    >\n      <div className='grid justify-items-center gap-2'>\n        <p>Congratulations on completing the level!</p>\n        <p className='bg-primary max-w-fit p-2 rounded-lg '>\n          <Link to='/'>Back to Home</Link>\n        </p>\n      </div>\n    </dialog>\n  );\n}\n","import '../../styles/GamePage.css';\nimport React, { useEffect, useState } from 'react';\nimport ErrorPage from '../ErrorPage';\nimport { useLocation } from 'react-router-dom';\nimport { db } from '../../firebase-config';\nimport { collection } from 'firebase/firestore';\nimport { useCollectionOnce } from 'react-firebase-hooks/firestore';\nimport GamepageSidebar from './GamepageSidebar';\nimport GamePageSelect from './GamePageSelect';\nimport Notifications from './Notifications';\nimport WinModal from '../../Components/WinModal';\n\nexport function Component() {\n  const { docData, imageURL, docID } = useLocation().state;\n  const [snapshot, loading] = useCollectionOnce(\n    collection(db, 'levels', docID, 'characters')\n  );\n\n  const [characters, setCharacters] = useState([]);\n  const [guessCoords, setGuessCoords] = useState([]);\n  const [isSelectOpen, setIsSelectOpen] = useState(false);\n  const [selectCoords, setSelectCoords] = useState([0, 0]);\n  const [toastList, setToastList] = useState([]);\n  const [hasWon, setHasWon] = useState(false);\n\n  useEffect(() => {\n    if (!loading) {\n      setCharacters(charArrayFromSnapshot(snapshot));\n      document.addEventListener('keydown', (e) => {\n        if (e.key === 'Escape') {\n          if (isSelectOpen) {\n            setIsSelectOpen(false);\n          }\n        }\n      });\n    }\n    return () => {\n      setToastList([]);\n      setHasWon(false);\n    };\n  }, [loading]);\n\n  useEffect(() => {\n    if (!loading && characters.length === 0) {\n      setHasWon(true);\n    }\n  }, [characters]);\n\n  function handleGameClick(e) {\n    if (isSelectOpen) {\n      setIsSelectOpen(false);\n      return;\n    }\n    setIsSelectOpen(true);\n    const [relX, relY] = calcRelCoords(e.clientX, e.clientY);\n    setGuessCoords([relX, relY]);\n    setSelectCoords([e.pageX, e.pageY]);\n  }\n\n  // Handles submit from select bar.\n  function handleSubmitGuess(characterName) {\n    setIsSelectOpen(false);\n    const [relX, relY] = guessCoords;\n    let character;\n    for (const char of characters) {\n      if (char.name !== characterName) {\n        continue;\n      }\n      character = char;\n    }\n    if (checkGuess(relX, relY, character)) {\n      removeChar(character);\n      setToastList([...toastList, createToastObj(true, character.name)]);\n    } else {\n      setToastList([...toastList, createToastObj(false)]);\n    }\n  }\n\n  function removeChar(character) {\n    setCharacters(characters.filter((char) => char !== character));\n  }\n\n  return (\n    <div id='game-page'>\n      <GamePageSelect\n        characters={characters}\n        handleClick={handleSubmitGuess}\n        position={selectCoords}\n        visible={isSelectOpen}\n      />\n      <GamepageSidebar charactersData={characters} loading={loading} />\n      <div\n        id='image-container'\n        className=' flex justify-center'\n        onClick={handleGameClick}\n      >\n        <img\n          id='game-image'\n          src={imageURL}\n          alt={docData?.levelName}\n          className='w-full max-w-screen-xl'\n        />\n      </div>\n      <Notifications toastList={toastList} setToastList={setToastList} />\n      {hasWon && <WinModal hasWon={hasWon} />}\n    </div>\n  );\n}\n\nexport function ErrorBoundary() {\n  return <ErrorPage />;\n}\n\n// Finds the coords of click relative to the picture. (0,0) at top left of image (1,1) at bottom right\nfunction calcRelCoords(clientX, clientY) {\n  const containerRect = document\n    .querySelector('#game-image')\n    .getBoundingClientRect();\n  let relX = (clientX - containerRect.left) / containerRect.width;\n  let relY = (clientY - containerRect.top) / containerRect.height;\n  return [relX, relY];\n}\n\n// Gets array from snapshot\nfunction charArrayFromSnapshot(snapshot) {\n  const characterArr = snapshot.docs.map((doc) => doc.data());\n  return characterArr;\n}\n\n// Checks if coords given match those in database, given some freedom (delta) in guess.\nfunction checkGuess(relX, relY, character) {\n  const delta = 0.05;\n  const [characterX, characterY] = character.coords;\n  if (\n    characterX + delta > relX &&\n    characterX - delta < relX &&\n    characterY + delta > relY &&\n    characterY - delta < relY\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction createToastObj(isCorrect, name = undefined) {\n  return {\n    isCorrect,\n    name,\n  };\n}\n"],"names":["GamepageSidebar","_ref","loading","charactersData","_useState","useState","_useState2","_slicedToArray","isSideBarOpen","setIsSideBarOpen","_useState3","_useState4","characters","setCharacters","useEffect","fetchDownloadURLs","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newCharArr","_iterator","_step","character","downloadURL","wrap","_context","prev","next","_createForOfIteratorHelper","s","n","done","value","getDownloadURL","ref","storage","imageURL","sent","push","_objectSpread","t0","console","log","t1","e","f","finish","stop","_x","apply","arguments","_jsxs","id","className","children","Sidebar","concat","_jsx","Spinner","size","Items","ItemGroup","map","Item","length","src","alt","name","onClick","preventDefault","GamePageSelect","handleClick","position","visible","_position","x","y","style","left","top","SuccessToast","_ref$message","message","Toast","Toggle","FailureToast","Notifications","toastList","setToastList","list","interval","setInterval","deleteToast","clearInterval","index","newList","slice","_toConsumableArray","toast","i","isCorrect","WinModal","hasWon","document","querySelector","showModal","close","onKeyDown","key","Link","to","Component","_useLocation$state","useLocation","state","docData","docID","_useCollectionOnce","useCollectionOnce","collection","db","_useCollectionOnce2","snapshot","guessCoords","setGuessCoords","_useState5","_useState6","isSelectOpen","setIsSelectOpen","_useState7","_useState8","selectCoords","setSelectCoords","_useState9","_useState10","_useState11","_useState12","setHasWon","characterArr","docs","doc","data","charArrayFromSnapshot","addEventListener","characterName","_guessCoords","relX","relY","char","err","delta","_character$coords","coords","characterX","characterY","checkGuess","createToastObj","filter","removeChar","_calcRelCoords","clientX","clientY","containerRect","getBoundingClientRect","width","height","calcRelCoords","_calcRelCoords2","pageX","pageY","levelName","ErrorBoundary","ErrorPage","undefined"],"sourceRoot":""}